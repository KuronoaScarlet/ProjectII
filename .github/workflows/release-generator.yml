name: Release Generator

on: 
  push:
  pull_request:
  release:
    types: [published]

jobs:
  build:
    runs-on: windows-latest
    env:
      RELEASE_NAME: TDM-Caronte_Mandate_v0.8
      GNUTARGET: default

    steps:
    - name: Checkout
      uses: actions/checkout@main
    
    - name: Setup Release Version
      run: |
        echo "RELEASE_NAME=TDM-Caronte_Mandate_v0.8" >> $GITHUB_ENV
      shell: bash
      if: github.event_name == 'release' && github.event.action == 'published'

    - name: Setup Environment
      run: | 
        dir
        mkdir Build
        cd Build
        mkdir $
        cd ../../ProjectII
        dir
        
    # Setup MSBuild.exe path if required
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Build Solution (MSVC16)
      run: |
        msbuild.exe Development.sln  /property:Configuration=Release
        copy /Y build\Release\Game.exe build\$\Game.exe
      shell: cmd
      
    - name: Generate Artifacts
      run: |
        robocopy .\Output .\Build\$\Output /S
        robocopy .\build\$ .\Build\$\Output Game.exe /MOVE
        copy /Y .\README.md .\Build\$\README.md
        copy /Y .\LICENSE .\Build\$\LICENSE
        cd build
        7z a ./$.zip ./$
        dir
      shell: cmd

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: $.zip
        path: ./Build/$.zip
        
    - name: Upload Artifact to Release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: $
      with:
          upload_url: $
          asset_path: ./Build/$.zip
          asset_name: $.zip
          asset_content_type: application/zip
      if: github.event_name == 'release' && github.event.action == 'published'
